name: docker

on:
  push:
    branches:
    - main
    - stable
    - unstable
    tags:
      - v*

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_BUILD_SUMMARY: true
  REPO_NAME: $GITHUB_REPOSITORY
  IMAGE_NAME: ${{ github.repository }}:${{ github.ref_name }}

jobs:
  extract-version:
        uses: ./.github/workflows/extract-version.yml
  build-docker:
        name: build-docker
        runs-on: ubuntu-22.04
        strategy:
          fail-fast: false
        steps:

          - uses: actions/checkout@v4
          - name: Update Rust
            run: rustup update stable
          - name: Login to DockerHub
            uses: docker/login-action@v3
            with:
              username: ${{ env.DOCKER_USERNAME }}
              password: ${{ env.DOCKER_PASSWORD }}

          - name: Debug IMAGE_NAME
            run: echo "IMAGE_NAME=${{ env.IMAGE_NAME }}"
              
          - name: Cross build binaries
            run: |
                cargo install cross
                make build
            timeout-minutes: 100

          - name: Install QEMU
            run: sudo apt-get update && sudo apt-get install -y qemu-user-static

          - name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v3

          - name: Build and push using Bake
            uses: docker/bake-action@v6
            with:
              files: ./docker-bake.hcl
              source: .
              push: true
              load: true
              set: |
                *.context=.
                *.tags=${{ env.IMAGE_NAME }}
            env:
              GITHUB_REPO: ${{ github.repository }}
              DOCKER_BUILD_RECORD_UPLOAD: true

          - name: Login to DockerHub
            uses: docker/login-action@v3
            with:
                username: ${{ env.DOCKER_USERNAME }}
                password: ${{ env.DOCKER_PASSWORD }}

          - name: Create and push multiarch manifest
            run: |
                docker buildx imagetools create -t ${{ env.IMAGE_NAME }}  --append --debug \
                ${{ github.repository }}-arm64 \
                ${{ github.repository }}-amd64

